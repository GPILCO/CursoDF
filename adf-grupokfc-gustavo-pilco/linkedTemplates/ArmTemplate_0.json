{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-grupokfc-gustavo-pilco"
		},
		"ls_kfcDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"ls_kfcDataLake\""
		},
		"ls_FileSystemLOcal_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ls_FileSystemLOcal\""
		},
		"ls_SqlServerLocal_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ls_SqlServerLocal\""
		},
		"ls_SqlServerLocal_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ls_SqlServerLocal\""
		},
		"ls_Keyvault_kfc_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-grupokfc-adf.vault.azure.net/"
		},
		"ls_kfcDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsgrupokfcadf.dfs.core.windows.net"
		},
		"ls_AzureSqlDataBase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "connection-string"
		},
		"ls_FileSystemLOcal_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\gustavo.pilco\\DataFactory"
		},
		"ls_FileSystemLOcal_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "kfc\\gustavo.pilco"
		},
		"ls_SqlServerLocal_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kfc\\gustavo.pilco"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_FechaporDefecto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set FechaCorte",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaCortevar",
							"value": {
								"value": "@coalesce(pipeline().parameters.FechaCorte,formatDateTime(utcnow(),'yyyy-MM-dd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FechaCorte": {
						"type": "string"
					}
				},
				"variables": {
					"FechaCortevar": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_UsoCondicional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(mod(pipeline().parameters.Numero,2),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Resultado",
										"value": {
											"value": "El Numero @{pipeline().parameters.Numero} es impar",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Resultado",
										"value": {
											"value": "El Numero @{pipeline().parameters.Numero} es par",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"Resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_UsoFormulas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ParImpar",
						"description": "Par O Impar",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": {
								"value": "@if(equals(mod(pipeline().parameters.Numero,2),0),'Es Par','Es Impar')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Numero": {
						"type": "int"
					}
				},
				"variables": {
					"Resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_consumorest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Consultar Hora Universal",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://worldclockapi.com/api/json/utc/now",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Consultar Hora Universal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DayOfWeek",
							"value": {
								"value": "@activity('Consultar Hora Universal').output.dayOfTheWeek",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"DayOfWeek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ejemploFlujo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Bandera",
							"value": {
								"value": "@add(1,6)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Correcta",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": "ok"
						}
					},
					{
						"name": "Fallida",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": "error"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fallida",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": "Resultado Adicional"
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": "3"
						}
					},
					{
						"name": "Set variable4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": "Completado"
						}
					},
					{
						"name": "Set variable5",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fallida",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Correcta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Resultado",
							"value": "Union"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Bandera": {
						"type": "String"
					},
					"Resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase04"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_manejofechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set FechaActual",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaActual",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FechaFormatoPersonalizado",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set FechaActual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaFormatoPersonalizado",
							"value": {
								"value": "@formatDateTime(variables('FechaActual'),'yyyy-mm-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FechaInicioMes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set FechaFormatoPersonalizado",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaInicioMes",
							"value": {
								"value": "@startOfMonth(variables('FechaActual'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FechaSumaPeriodo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set FechaInicioMes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaSumaPeriodo",
							"value": {
								"value": "@addToTime(variables('FechaInicioMes'),1,'month')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"FechaActual": {
						"type": "String"
					},
					"FechaInicioMes": {
						"type": "String"
					},
					"FechaFormatoPersonalizado": {
						"type": "String"
					},
					"FechaSumaPeriodo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_usoSwitch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.Bandera",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "Set variable1",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Mensaje",
												"value": {
													"value": "@string(add(pipeline().parameters.Numero1,pipeline().parameters.Numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "Set variable2",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Mensaje",
												"value": {
													"value": "@string(div(pipeline().parameters.Numero1,pipeline().parameters.Numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "C",
									"activities": [
										{
											"name": "Set variable3",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Mensaje",
												"value": {
													"value": "@string(mul(pipeline().parameters.Numero1,pipeline().parameters.Numero2))",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set variable4",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Mensaje",
										"value": "Default"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Bandera": {
						"type": "string"
					},
					"Numero1": {
						"type": "float",
						"defaultValue": 20
					},
					"Numero2": {
						"type": "float",
						"defaultValue": 10
					}
				},
				"variables": {
					"Mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Keyvault_kfc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_Keyvault_kfc_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_kfcDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_kfcDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_kfcDataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-ConLocal')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Acceder a los recursos de la maquina local",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_EjemploClase02Nube')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kfcDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase02"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kfcDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_Escribir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kfcDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directorio": {
						"type": "string"
					},
					"NombreArchivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Clase03"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().NombreArchivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directorio",
							"type": "Expression"
						},
						"fileSystem": "aci-gustavo-pilco"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kfcDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_ResultadoSP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kfcDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "saludol.csv",
						"folderPath": "RESULTADOS",
						"fileSystem": "aci-gustavo-pilco"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kfcDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_ParquetEjemploClase02')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kfcDataLake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase02"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EjemploClase02.parquet",
						"folderPath": "Clase02",
						"fileSystem": "aci-gustavo-pilco"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kfcDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureSqlDataBase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_Keyvault_kfc",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_AzureSqlDataBase_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Keyvault_kfc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_FileSystemLOcal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_FileSystemLOcal_properties_typeProperties_host')]",
					"userId": "[parameters('ls_FileSystemLOcal_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_FileSystemLOcal_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-ConLocal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-ConLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SqlServerLocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_SqlServerLocal_connectionString')]",
					"userName": "[parameters('ls_SqlServerLocal_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_SqlServerLocal_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-ConLocal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-ConLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ejecutar_sp1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Saludar]",
							"storedProcedureParameters": {
								"nombre": {
									"value": "Data Factory",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureSqlDataBase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Clase Asincrona"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_LeerDatos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Taller"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "idIngesta",
						"type": "varchar"
					},
					{
						"name": "esquema",
						"type": "varchar"
					},
					{
						"name": "tabla",
						"type": "varchar"
					},
					{
						"name": "consulta",
						"type": "varchar"
					},
					{
						"name": "tipoTabla",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "par",
					"table": "CatIngesta"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sql_Azure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase03"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CatagoloGustavoPilco"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDataBase')]"
			]
		}
	]
}